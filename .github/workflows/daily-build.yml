name: Daily Build

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC时间0点运行
  workflow_dispatch:      # 允许手动触发

env:
  # SDK仓库配置
  LINUX_SDK_REPO: "git@gitcode.com:Cangjie/CangjieSDK-Linux-Beta.git"
  WINDOWS_SDK_REPO: "git@gitcode.com:Cangjie/CangjieSDK-Win-Beta.git"
  LINUX_SDK_TAG: "Cangjie-Linux-Canary-0.58.3"
  WINDOWS_SDK_TAG: "Cangjie-Win-Canary-0.58.3"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup GitCode SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.GITCODE_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
        echo "${{ secrets.GITCODE_SSH_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        
    - name: Setup Git LFS
      run: |
        # 通用安装方法（不依赖包管理器）
        if ! git lfs version &>/dev/null; then
          echo "Git LFS not found, attempting to install..."
          if [ "$RUNNER_OS" == "Linux" ]; then
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
            sudo apt-get install git-lfs
          else
            # Windows平台使用官方安装方法
            curl -L -o git-lfs.exe https://github.com/git-lfs/git-lfs/releases/download/v3.5.1/git-lfs-windows-amd64-v3.5.1.exe
            ./git-lfs.exe install --skip-download
          fi
        fi
        git lfs install --skip-repo
        git lfs version

    - name: Clone SDK Repository
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          git clone --branch $LINUX_SDK_TAG --depth 1 $LINUX_SDK_REPO sdk-repo
        else
          git clone --branch $WINDOWS_SDK_TAG --depth 1 $WINDOWS_SDK_REPO sdk-repo
        fi
        cd sdk-repo
        git lfs fetch origin ${{ matrix.sdk_tag }}
        git lfs checkout
        cd ..

    - name: Setup CangJie SDK
      run: |
        cd sdk-repo
        if [ "$RUNNER_OS" == "Linux" ]; then
          ARCH=$(uname -m)
          if [ "$ARCH" == "aarch64" ]; then
            tar -xzf cangjie-0.58.3-linux_aarch64.tar.gz
          else
            tar -xzf cangjie-0.58.3-linux_x64.tar.gz
          fi
          cd cangjie
          chmod +x envsetup.sh
          source ./envsetup.sh
        else
          unzip cangjie-0.58.3-windows_x64.zip
          cd cangjie
          if [ -f "envsetup.bat" ]; then
            .\envsetup.bat
          else
            pwsh -Command "& { .\envsetup.ps1 }"
          fi
        fi
        
    - name: Build with cjpm
      run: cjpm build
        
    - name: Upload artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: shadowsocks_cj-${{ matrix.os }}
        path: shadowsocks_cj.zip
